/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SP {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    FENTRY_CALL	= 18,
    PATCHPOINT	= 19,
    LOAD_STACK_GUARD	= 20,
    STATEPOINT	= 21,
    LOCAL_ESCAPE	= 22,
    FAULTING_OP	= 23,
    PATCHABLE_OP	= 24,
    PATCHABLE_FUNCTION_ENTER	= 25,
    PATCHABLE_RET	= 26,
    PATCHABLE_FUNCTION_EXIT	= 27,
    PATCHABLE_TAIL_CALL	= 28,
    PATCHABLE_EVENT_CALL	= 29,
    G_ADD	= 30,
    G_SUB	= 31,
    G_MUL	= 32,
    G_SDIV	= 33,
    G_UDIV	= 34,
    G_SREM	= 35,
    G_UREM	= 36,
    G_AND	= 37,
    G_OR	= 38,
    G_XOR	= 39,
    G_IMPLICIT_DEF	= 40,
    G_FRAME_INDEX	= 41,
    G_GLOBAL_VALUE	= 42,
    G_EXTRACT	= 43,
    G_UNMERGE_VALUES	= 44,
    G_INSERT	= 45,
    G_MERGE_VALUES	= 46,
    G_PTRTOINT	= 47,
    G_INTTOPTR	= 48,
    G_BITCAST	= 49,
    G_LOAD	= 50,
    G_STORE	= 51,
    G_BRCOND	= 52,
    G_BRINDIRECT	= 53,
    G_INTRINSIC	= 54,
    G_INTRINSIC_W_SIDE_EFFECTS	= 55,
    G_ANYEXT	= 56,
    G_TRUNC	= 57,
    G_CONSTANT	= 58,
    G_FCONSTANT	= 59,
    G_VASTART	= 60,
    G_VAARG	= 61,
    G_SEXT	= 62,
    G_ZEXT	= 63,
    G_SHL	= 64,
    G_LSHR	= 65,
    G_ASHR	= 66,
    G_ICMP	= 67,
    G_FCMP	= 68,
    G_SELECT	= 69,
    G_UADDE	= 70,
    G_USUBE	= 71,
    G_SADDO	= 72,
    G_SSUBO	= 73,
    G_UMULO	= 74,
    G_SMULO	= 75,
    G_UMULH	= 76,
    G_SMULH	= 77,
    G_FADD	= 78,
    G_FSUB	= 79,
    G_FMUL	= 80,
    G_FMA	= 81,
    G_FDIV	= 82,
    G_FREM	= 83,
    G_FPOW	= 84,
    G_FEXP	= 85,
    G_FEXP2	= 86,
    G_FLOG	= 87,
    G_FLOG2	= 88,
    G_FNEG	= 89,
    G_FPEXT	= 90,
    G_FPTRUNC	= 91,
    G_FPTOSI	= 92,
    G_FPTOUI	= 93,
    G_SITOFP	= 94,
    G_UITOFP	= 95,
    G_GEP	= 96,
    G_PTR_MASK	= 97,
    G_BR	= 98,
    G_INSERT_VECTOR_ELT	= 99,
    G_EXTRACT_VECTOR_ELT	= 100,
    G_SHUFFLE_VECTOR	= 101,
    ADDCCri	= 102,
    ADDCCrr	= 103,
    ADDCri	= 104,
    ADDCrr	= 105,
    ADDEri	= 106,
    ADDErr	= 107,
    ADDXC	= 108,
    ADDXCCC	= 109,
    ADDXri	= 110,
    ADDXrr	= 111,
    ADDri	= 112,
    ADDrr	= 113,
    ADJCALLSTACKDOWN	= 114,
    ADJCALLSTACKUP	= 115,
    ALIGNADDR	= 116,
    ALIGNADDRL	= 117,
    ANDCCri	= 118,
    ANDCCrr	= 119,
    ANDNCCri	= 120,
    ANDNCCrr	= 121,
    ANDNri	= 122,
    ANDNrr	= 123,
    ANDXNrr	= 124,
    ANDXri	= 125,
    ANDXrr	= 126,
    ANDri	= 127,
    ANDrr	= 128,
    ARRAY16	= 129,
    ARRAY32	= 130,
    ARRAY8	= 131,
    BA	= 132,
    BCOND	= 133,
    BCONDA	= 134,
    BINDri	= 135,
    BINDrr	= 136,
    BMASK	= 137,
    BPFCC	= 138,
    BPFCCA	= 139,
    BPFCCANT	= 140,
    BPFCCNT	= 141,
    BPGEZapn	= 142,
    BPGEZapt	= 143,
    BPGEZnapn	= 144,
    BPGEZnapt	= 145,
    BPGZapn	= 146,
    BPGZapt	= 147,
    BPGZnapn	= 148,
    BPGZnapt	= 149,
    BPICC	= 150,
    BPICCA	= 151,
    BPICCANT	= 152,
    BPICCNT	= 153,
    BPLEZapn	= 154,
    BPLEZapt	= 155,
    BPLEZnapn	= 156,
    BPLEZnapt	= 157,
    BPLZapn	= 158,
    BPLZapt	= 159,
    BPLZnapn	= 160,
    BPLZnapt	= 161,
    BPNZapn	= 162,
    BPNZapt	= 163,
    BPNZnapn	= 164,
    BPNZnapt	= 165,
    BPXCC	= 166,
    BPXCCA	= 167,
    BPXCCANT	= 168,
    BPXCCNT	= 169,
    BPZapn	= 170,
    BPZapt	= 171,
    BPZnapn	= 172,
    BPZnapt	= 173,
    BSHUFFLE	= 174,
    CALL	= 175,
    CALLri	= 176,
    CALLrr	= 177,
    CASAasi10	= 178,
    CASArr	= 179,
    CASXrr	= 180,
    CASrr	= 181,
    CBCOND	= 182,
    CBCONDA	= 183,
    CMASK16	= 184,
    CMASK32	= 185,
    CMASK8	= 186,
    CMPri	= 187,
    CMPrr	= 188,
    EDGE16	= 189,
    EDGE16L	= 190,
    EDGE16LN	= 191,
    EDGE16N	= 192,
    EDGE32	= 193,
    EDGE32L	= 194,
    EDGE32LN	= 195,
    EDGE32N	= 196,
    EDGE8	= 197,
    EDGE8L	= 198,
    EDGE8LN	= 199,
    EDGE8N	= 200,
    EH_SJLJ_LONGJMP32ri	= 201,
    EH_SJLJ_LONGJMP32rr	= 202,
    EH_SJLJ_SETJMP32ri	= 203,
    EH_SJLJ_SETJMP32rr	= 204,
    FABSD	= 205,
    FABSQ	= 206,
    FABSS	= 207,
    FADDD	= 208,
    FADDQ	= 209,
    FADDS	= 210,
    FALIGNADATA	= 211,
    FAND	= 212,
    FANDNOT1	= 213,
    FANDNOT1S	= 214,
    FANDNOT2	= 215,
    FANDNOT2S	= 216,
    FANDS	= 217,
    FBCOND	= 218,
    FBCONDA	= 219,
    FCHKSM16	= 220,
    FCMPD	= 221,
    FCMPEQ16	= 222,
    FCMPEQ32	= 223,
    FCMPGT16	= 224,
    FCMPGT32	= 225,
    FCMPLE16	= 226,
    FCMPLE32	= 227,
    FCMPNE16	= 228,
    FCMPNE32	= 229,
    FCMPQ	= 230,
    FCMPS	= 231,
    FDIVD	= 232,
    FDIVQ	= 233,
    FDIVS	= 234,
    FDMULQ	= 235,
    FDTOI	= 236,
    FDTOQ	= 237,
    FDTOS	= 238,
    FDTOX	= 239,
    FEXPAND	= 240,
    FHADDD	= 241,
    FHADDS	= 242,
    FHSUBD	= 243,
    FHSUBS	= 244,
    FITOD	= 245,
    FITOQ	= 246,
    FITOS	= 247,
    FLCMPD	= 248,
    FLCMPS	= 249,
    FLUSH	= 250,
    FLUSHW	= 251,
    FLUSHri	= 252,
    FLUSHrr	= 253,
    FMEAN16	= 254,
    FMOVD	= 255,
    FMOVD_FCC	= 256,
    FMOVD_ICC	= 257,
    FMOVD_XCC	= 258,
    FMOVQ	= 259,
    FMOVQ_FCC	= 260,
    FMOVQ_ICC	= 261,
    FMOVQ_XCC	= 262,
    FMOVRGEZD	= 263,
    FMOVRGEZQ	= 264,
    FMOVRGEZS	= 265,
    FMOVRGZD	= 266,
    FMOVRGZQ	= 267,
    FMOVRGZS	= 268,
    FMOVRLEZD	= 269,
    FMOVRLEZQ	= 270,
    FMOVRLEZS	= 271,
    FMOVRLZD	= 272,
    FMOVRLZQ	= 273,
    FMOVRLZS	= 274,
    FMOVRNZD	= 275,
    FMOVRNZQ	= 276,
    FMOVRNZS	= 277,
    FMOVRZD	= 278,
    FMOVRZQ	= 279,
    FMOVRZS	= 280,
    FMOVS	= 281,
    FMOVS_FCC	= 282,
    FMOVS_ICC	= 283,
    FMOVS_XCC	= 284,
    FMUL8SUX16	= 285,
    FMUL8ULX16	= 286,
    FMUL8X16	= 287,
    FMUL8X16AL	= 288,
    FMUL8X16AU	= 289,
    FMULD	= 290,
    FMULD8SUX16	= 291,
    FMULD8ULX16	= 292,
    FMULQ	= 293,
    FMULS	= 294,
    FNADDD	= 295,
    FNADDS	= 296,
    FNAND	= 297,
    FNANDS	= 298,
    FNEGD	= 299,
    FNEGQ	= 300,
    FNEGS	= 301,
    FNHADDD	= 302,
    FNHADDS	= 303,
    FNMULD	= 304,
    FNMULS	= 305,
    FNOR	= 306,
    FNORS	= 307,
    FNOT1	= 308,
    FNOT1S	= 309,
    FNOT2	= 310,
    FNOT2S	= 311,
    FNSMULD	= 312,
    FONE	= 313,
    FONES	= 314,
    FOR	= 315,
    FORNOT1	= 316,
    FORNOT1S	= 317,
    FORNOT2	= 318,
    FORNOT2S	= 319,
    FORS	= 320,
    FPACK16	= 321,
    FPACK32	= 322,
    FPACKFIX	= 323,
    FPADD16	= 324,
    FPADD16S	= 325,
    FPADD32	= 326,
    FPADD32S	= 327,
    FPADD64	= 328,
    FPMERGE	= 329,
    FPSUB16	= 330,
    FPSUB16S	= 331,
    FPSUB32	= 332,
    FPSUB32S	= 333,
    FQTOD	= 334,
    FQTOI	= 335,
    FQTOS	= 336,
    FQTOX	= 337,
    FSLAS16	= 338,
    FSLAS32	= 339,
    FSLL16	= 340,
    FSLL32	= 341,
    FSMULD	= 342,
    FSQRTD	= 343,
    FSQRTQ	= 344,
    FSQRTS	= 345,
    FSRA16	= 346,
    FSRA32	= 347,
    FSRC1	= 348,
    FSRC1S	= 349,
    FSRC2	= 350,
    FSRC2S	= 351,
    FSRL16	= 352,
    FSRL32	= 353,
    FSTOD	= 354,
    FSTOI	= 355,
    FSTOQ	= 356,
    FSTOX	= 357,
    FSUBD	= 358,
    FSUBQ	= 359,
    FSUBS	= 360,
    FXNOR	= 361,
    FXNORS	= 362,
    FXOR	= 363,
    FXORS	= 364,
    FXTOD	= 365,
    FXTOQ	= 366,
    FXTOS	= 367,
    FZERO	= 368,
    FZEROS	= 369,
    GETPCX	= 370,
    JMPLri	= 371,
    JMPLrr	= 372,
    LDArr	= 373,
    LDCSRri	= 374,
    LDCSRrr	= 375,
    LDCri	= 376,
    LDCrr	= 377,
    LDDArr	= 378,
    LDDCri	= 379,
    LDDCrr	= 380,
    LDDFArr	= 381,
    LDDFri	= 382,
    LDDFrr	= 383,
    LDDri	= 384,
    LDDrr	= 385,
    LDFArr	= 386,
    LDFSRri	= 387,
    LDFSRrr	= 388,
    LDFri	= 389,
    LDFrr	= 390,
    LDQFArr	= 391,
    LDQFri	= 392,
    LDQFrr	= 393,
    LDSBArr	= 394,
    LDSBri	= 395,
    LDSBrr	= 396,
    LDSHArr	= 397,
    LDSHri	= 398,
    LDSHrr	= 399,
    LDSTUBArr	= 400,
    LDSTUBri	= 401,
    LDSTUBrr	= 402,
    LDSWri	= 403,
    LDSWrr	= 404,
    LDUBArr	= 405,
    LDUBri	= 406,
    LDUBrr	= 407,
    LDUHArr	= 408,
    LDUHri	= 409,
    LDUHrr	= 410,
    LDXFSRri	= 411,
    LDXFSRrr	= 412,
    LDXri	= 413,
    LDXrr	= 414,
    LDri	= 415,
    LDrr	= 416,
    LEAX_ADDri	= 417,
    LEA_ADDri	= 418,
    LZCNT	= 419,
    MEMBARi	= 420,
    MOVDTOX	= 421,
    MOVFCCri	= 422,
    MOVFCCrr	= 423,
    MOVICCri	= 424,
    MOVICCrr	= 425,
    MOVRGEZri	= 426,
    MOVRGEZrr	= 427,
    MOVRGZri	= 428,
    MOVRGZrr	= 429,
    MOVRLEZri	= 430,
    MOVRLEZrr	= 431,
    MOVRLZri	= 432,
    MOVRLZrr	= 433,
    MOVRNZri	= 434,
    MOVRNZrr	= 435,
    MOVRRZri	= 436,
    MOVRRZrr	= 437,
    MOVSTOSW	= 438,
    MOVSTOUW	= 439,
    MOVWTOS	= 440,
    MOVXCCri	= 441,
    MOVXCCrr	= 442,
    MOVXTOD	= 443,
    MULSCCri	= 444,
    MULSCCrr	= 445,
    MULXri	= 446,
    MULXrr	= 447,
    NOP	= 448,
    ORCCri	= 449,
    ORCCrr	= 450,
    ORNCCri	= 451,
    ORNCCrr	= 452,
    ORNri	= 453,
    ORNrr	= 454,
    ORXNrr	= 455,
    ORXri	= 456,
    ORXrr	= 457,
    ORri	= 458,
    ORrr	= 459,
    PDIST	= 460,
    PDISTN	= 461,
    POPCrr	= 462,
    RDASR	= 463,
    RDPR	= 464,
    RDPSR	= 465,
    RDTBR	= 466,
    RDWIM	= 467,
    RESTOREri	= 468,
    RESTORErr	= 469,
    RET	= 470,
    RETL	= 471,
    RETTri	= 472,
    RETTrr	= 473,
    SAVEri	= 474,
    SAVErr	= 475,
    SDIVCCri	= 476,
    SDIVCCrr	= 477,
    SDIVXri	= 478,
    SDIVXrr	= 479,
    SDIVri	= 480,
    SDIVrr	= 481,
    SELECT_CC_DFP_FCC	= 482,
    SELECT_CC_DFP_ICC	= 483,
    SELECT_CC_FP_FCC	= 484,
    SELECT_CC_FP_ICC	= 485,
    SELECT_CC_Int_FCC	= 486,
    SELECT_CC_Int_ICC	= 487,
    SELECT_CC_QFP_FCC	= 488,
    SELECT_CC_QFP_ICC	= 489,
    SET	= 490,
    SETHIXi	= 491,
    SETHIi	= 492,
    SHUTDOWN	= 493,
    SIAM	= 494,
    SLLXri	= 495,
    SLLXrr	= 496,
    SLLri	= 497,
    SLLrr	= 498,
    SMACri	= 499,
    SMACrr	= 500,
    SMULCCri	= 501,
    SMULCCrr	= 502,
    SMULri	= 503,
    SMULrr	= 504,
    SRAXri	= 505,
    SRAXrr	= 506,
    SRAri	= 507,
    SRArr	= 508,
    SRLXri	= 509,
    SRLXrr	= 510,
    SRLri	= 511,
    SRLrr	= 512,
    STArr	= 513,
    STBAR	= 514,
    STBArr	= 515,
    STBri	= 516,
    STBrr	= 517,
    STCSRri	= 518,
    STCSRrr	= 519,
    STCri	= 520,
    STCrr	= 521,
    STDArr	= 522,
    STDCQri	= 523,
    STDCQrr	= 524,
    STDCri	= 525,
    STDCrr	= 526,
    STDFArr	= 527,
    STDFQri	= 528,
    STDFQrr	= 529,
    STDFri	= 530,
    STDFrr	= 531,
    STDri	= 532,
    STDrr	= 533,
    STFArr	= 534,
    STFSRri	= 535,
    STFSRrr	= 536,
    STFri	= 537,
    STFrr	= 538,
    STHArr	= 539,
    STHri	= 540,
    STHrr	= 541,
    STQFArr	= 542,
    STQFri	= 543,
    STQFrr	= 544,
    STXFSRri	= 545,
    STXFSRrr	= 546,
    STXri	= 547,
    STXrr	= 548,
    STri	= 549,
    STrr	= 550,
    SUBCCri	= 551,
    SUBCCrr	= 552,
    SUBCri	= 553,
    SUBCrr	= 554,
    SUBEri	= 555,
    SUBErr	= 556,
    SUBXri	= 557,
    SUBXrr	= 558,
    SUBri	= 559,
    SUBrr	= 560,
    SWAPArr	= 561,
    SWAPri	= 562,
    SWAPrr	= 563,
    TA3	= 564,
    TA5	= 565,
    TADDCCTVri	= 566,
    TADDCCTVrr	= 567,
    TADDCCri	= 568,
    TADDCCrr	= 569,
    TICCri	= 570,
    TICCrr	= 571,
    TLS_ADDXrr	= 572,
    TLS_ADDrr	= 573,
    TLS_CALL	= 574,
    TLS_LDXrr	= 575,
    TLS_LDrr	= 576,
    TRAPri	= 577,
    TRAPrr	= 578,
    TSUBCCTVri	= 579,
    TSUBCCTVrr	= 580,
    TSUBCCri	= 581,
    TSUBCCrr	= 582,
    TXCCri	= 583,
    TXCCrr	= 584,
    UDIVCCri	= 585,
    UDIVCCrr	= 586,
    UDIVXri	= 587,
    UDIVXrr	= 588,
    UDIVri	= 589,
    UDIVrr	= 590,
    UMACri	= 591,
    UMACrr	= 592,
    UMULCCri	= 593,
    UMULCCrr	= 594,
    UMULXHI	= 595,
    UMULri	= 596,
    UMULrr	= 597,
    UNIMP	= 598,
    V9FCMPD	= 599,
    V9FCMPED	= 600,
    V9FCMPEQ	= 601,
    V9FCMPES	= 602,
    V9FCMPQ	= 603,
    V9FCMPS	= 604,
    V9FMOVD_FCC	= 605,
    V9FMOVQ_FCC	= 606,
    V9FMOVS_FCC	= 607,
    V9MOVFCCri	= 608,
    V9MOVFCCrr	= 609,
    WRASRri	= 610,
    WRASRrr	= 611,
    WRPRri	= 612,
    WRPRrr	= 613,
    WRPSRri	= 614,
    WRPSRrr	= 615,
    WRTBRri	= 616,
    WRTBRrr	= 617,
    WRWIMri	= 618,
    WRWIMrr	= 619,
    XMULX	= 620,
    XMULXHI	= 621,
    XNORCCri	= 622,
    XNORCCrr	= 623,
    XNORXrr	= 624,
    XNORri	= 625,
    XNORrr	= 626,
    XORCCri	= 627,
    XORCCrr	= 628,
    XORXri	= 629,
    XORXrr	= 630,
    XORri	= 631,
    XORrr	= 632,
    INSTRUCTION_LIST_END = 633
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_iu_instr	= 1,
    IIC_fpu_normal_instr	= 2,
    IIC_jmp_or_call	= 3,
    IIC_fpu_abs	= 4,
    IIC_fpu_fast_instr	= 5,
    IIC_fpu_divd	= 6,
    IIC_fpu_divs	= 7,
    IIC_fpu_muld	= 8,
    IIC_fpu_muls	= 9,
    IIC_fpu_negs	= 10,
    IIC_fpu_sqrtd	= 11,
    IIC_fpu_sqrts	= 12,
    IIC_fpu_stod	= 13,
    IIC_ldd	= 14,
    IIC_iu_or_fpu_instr	= 15,
    IIC_iu_div	= 16,
    IIC_smac_umac	= 17,
    IIC_iu_smul	= 18,
    IIC_st	= 19,
    IIC_std	= 20,
    IIC_iu_umul	= 21,
    SCHED_LIST_END = 22
  };
} // end Sched namespace
} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { SP::ICC, 0 };
static const MCPhysReg ImplicitList2[] = { SP::O6, 0 };
static const MCPhysReg ImplicitList3[] = { SP::WIM, 0 };
static const MCPhysReg ImplicitList4[] = { SP::FCC0, 0 };
static const MCPhysReg ImplicitList5[] = { SP::O7, 0 };
static const MCPhysReg ImplicitList6[] = { SP::CPSR, 0 };
static const MCPhysReg ImplicitList7[] = { SP::FSR, 0 };
static const MCPhysReg ImplicitList8[] = { SP::Y, SP::ICC, 0 };
static const MCPhysReg ImplicitList9[] = { SP::PSR, 0 };
static const MCPhysReg ImplicitList10[] = { SP::TBR, 0 };
static const MCPhysReg ImplicitList11[] = { SP::Y, 0 };
static const MCPhysReg ImplicitList12[] = { SP::Y, SP::ASR18, 0 };
static const MCPhysReg ImplicitList13[] = { SP::CPQ, 0 };
static const MCPhysReg ImplicitList14[] = { SP::FQ, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo38[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo40[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo62[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo63[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo124[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo125[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo126[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SparcInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #18 = FENTRY_CALL
  { 19,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #19 = PATCHPOINT
  { 20,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #20 = LOAD_STACK_GUARD
  { 21,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #21 = STATEPOINT
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #22 = LOCAL_ESCAPE
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = FAULTING_OP
  { 24,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #24 = PATCHABLE_OP
  { 25,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #25 = PATCHABLE_FUNCTION_ENTER
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = PATCHABLE_RET
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_FUNCTION_EXIT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = PATCHABLE_TAIL_CALL
  { 29,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #29 = PATCHABLE_EVENT_CALL
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_ADD
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_SUB
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_MUL
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_SDIV
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_UDIV
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_SREM
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_UREM
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_AND
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #38 = G_OR
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #39 = G_XOR
  { 40,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #40 = G_IMPLICIT_DEF
  { 41,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_FRAME_INDEX
  { 42,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #42 = G_GLOBAL_VALUE
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #43 = G_EXTRACT
  { 44,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #44 = G_UNMERGE_VALUES
  { 45,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_INSERT
  { 46,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #46 = G_MERGE_VALUES
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = G_PTRTOINT
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #48 = G_INTTOPTR
  { 49,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_BITCAST
  { 50,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #50 = G_LOAD
  { 51,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #51 = G_STORE
  { 52,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #52 = G_BRCOND
  { 53,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #53 = G_BRINDIRECT
  { 54,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #54 = G_INTRINSIC
  { 55,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #55 = G_INTRINSIC_W_SIDE_EFFECTS
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #56 = G_ANYEXT
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #57 = G_TRUNC
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #58 = G_CONSTANT
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #59 = G_FCONSTANT
  { 60,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #60 = G_VASTART
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #61 = G_VAARG
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #62 = G_SEXT
  { 63,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #63 = G_ZEXT
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #64 = G_SHL
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #65 = G_LSHR
  { 66,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #66 = G_ASHR
  { 67,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_ICMP
  { 68,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #68 = G_FCMP
  { 69,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #69 = G_SELECT
  { 70,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #70 = G_UADDE
  { 71,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #71 = G_USUBE
  { 72,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #72 = G_SADDO
  { 73,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #73 = G_SSUBO
  { 74,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #74 = G_UMULO
  { 75,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #75 = G_SMULO
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #76 = G_UMULH
  { 77,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #77 = G_SMULH
  { 78,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #78 = G_FADD
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #79 = G_FSUB
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #80 = G_FMUL
  { 81,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #81 = G_FMA
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #82 = G_FDIV
  { 83,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #83 = G_FREM
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #84 = G_FPOW
  { 85,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #85 = G_FEXP
  { 86,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #86 = G_FEXP2
  { 87,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #87 = G_FLOG
  { 88,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #88 = G_FLOG2
  { 89,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #89 = G_FNEG
  { 90,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #90 = G_FPEXT
  { 91,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #91 = G_FPTRUNC
  { 92,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #92 = G_FPTOSI
  { 93,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #93 = G_FPTOUI
  { 94,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #94 = G_SITOFP
  { 95,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #95 = G_UITOFP
  { 96,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #96 = G_GEP
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #97 = G_PTR_MASK
  { 98,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #98 = G_BR
  { 99,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #99 = G_INSERT_VECTOR_ELT
  { 100,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #100 = G_EXTRACT_VECTOR_ELT
  { 101,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #101 = G_SHUFFLE_VECTOR
  { 102,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #102 = ADDCCri
  { 103,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #103 = ADDCCrr
  { 104,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #104 = ADDCri
  { 105,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #105 = ADDCrr
  { 106,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #106 = ADDEri
  { 107,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #107 = ADDErr
  { 108,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #108 = ADDXC
  { 109,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #109 = ADDXCCC
  { 110,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #110 = ADDXri
  { 111,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #111 = ADDXrr
  { 112,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #112 = ADDri
  { 113,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #113 = ADDrr
  { 114,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #114 = ADJCALLSTACKDOWN
  { 115,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #115 = ADJCALLSTACKUP
  { 116,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #116 = ALIGNADDR
  { 117,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #117 = ALIGNADDRL
  { 118,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #118 = ANDCCri
  { 119,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #119 = ANDCCrr
  { 120,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #120 = ANDNCCri
  { 121,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #121 = ANDNCCrr
  { 122,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #122 = ANDNri
  { 123,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #123 = ANDNrr
  { 124,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #124 = ANDXNrr
  { 125,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #125 = ANDXri
  { 126,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #126 = ANDXrr
  { 127,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #127 = ANDri
  { 128,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #128 = ANDrr
  { 129,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #129 = ARRAY16
  { 130,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #130 = ARRAY32
  { 131,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #131 = ARRAY8
  { 132,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #132 = BA
  { 133,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #133 = BCOND
  { 134,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #134 = BCONDA
  { 135,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #135 = BINDri
  { 136,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #136 = BINDrr
  { 137,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #137 = BMASK
  { 138,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #138 = BPFCC
  { 139,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #139 = BPFCCA
  { 140,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #140 = BPFCCANT
  { 141,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #141 = BPFCCNT
  { 142,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #142 = BPGEZapn
  { 143,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #143 = BPGEZapt
  { 144,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #144 = BPGEZnapn
  { 145,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #145 = BPGEZnapt
  { 146,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #146 = BPGZapn
  { 147,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #147 = BPGZapt
  { 148,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #148 = BPGZnapn
  { 149,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #149 = BPGZnapt
  { 150,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #150 = BPICC
  { 151,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #151 = BPICCA
  { 152,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #152 = BPICCANT
  { 153,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #153 = BPICCNT
  { 154,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #154 = BPLEZapn
  { 155,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #155 = BPLEZapt
  { 156,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #156 = BPLEZnapn
  { 157,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #157 = BPLEZnapt
  { 158,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #158 = BPLZapn
  { 159,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #159 = BPLZapt
  { 160,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #160 = BPLZnapn
  { 161,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #161 = BPLZnapt
  { 162,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #162 = BPNZapn
  { 163,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #163 = BPNZapt
  { 164,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #164 = BPNZnapn
  { 165,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #165 = BPNZnapt
  { 166,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #166 = BPXCC
  { 167,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #167 = BPXCCA
  { 168,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #168 = BPXCCANT
  { 169,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #169 = BPXCCNT
  { 170,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #170 = BPZapn
  { 171,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #171 = BPZapt
  { 172,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #172 = BPZnapn
  { 173,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #173 = BPZnapt
  { 174,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #174 = BSHUFFLE
  { 175,	1,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #175 = CALL
  { 176,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #176 = CALLri
  { 177,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #177 = CALLrr
  { 178,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #178 = CASAasi10
  { 179,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #179 = CASArr
  { 180,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #180 = CASXrr
  { 181,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #181 = CASrr
  { 182,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #182 = CBCOND
  { 183,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #183 = CBCONDA
  { 184,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #184 = CMASK16
  { 185,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #185 = CMASK32
  { 186,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #186 = CMASK8
  { 187,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #187 = CMPri
  { 188,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #188 = CMPrr
  { 189,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #189 = EDGE16
  { 190,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #190 = EDGE16L
  { 191,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #191 = EDGE16LN
  { 192,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #192 = EDGE16N
  { 193,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #193 = EDGE32
  { 194,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #194 = EDGE32L
  { 195,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #195 = EDGE32LN
  { 196,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #196 = EDGE32N
  { 197,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #197 = EDGE8
  { 198,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #198 = EDGE8L
  { 199,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #199 = EDGE8LN
  { 200,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #200 = EDGE8N
  { 201,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #201 = EH_SJLJ_LONGJMP32ri
  { 202,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #202 = EH_SJLJ_LONGJMP32rr
  { 203,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo43, -1 ,nullptr },  // Inst #203 = EH_SJLJ_SETJMP32ri
  { 204,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #204 = EH_SJLJ_SETJMP32rr
  { 205,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #205 = FABSD
  { 206,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #206 = FABSQ
  { 207,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #207 = FABSS
  { 208,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #208 = FADDD
  { 209,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #209 = FADDQ
  { 210,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #210 = FADDS
  { 211,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #211 = FALIGNADATA
  { 212,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #212 = FAND
  { 213,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #213 = FANDNOT1
  { 214,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #214 = FANDNOT1S
  { 215,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #215 = FANDNOT2
  { 216,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #216 = FANDNOT2S
  { 217,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #217 = FANDS
  { 218,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #218 = FBCOND
  { 219,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #219 = FBCONDA
  { 220,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #220 = FCHKSM16
  { 221,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo45, -1 ,nullptr },  // Inst #221 = FCMPD
  { 222,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #222 = FCMPEQ16
  { 223,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #223 = FCMPEQ32
  { 224,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #224 = FCMPGT16
  { 225,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #225 = FCMPGT32
  { 226,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #226 = FCMPLE16
  { 227,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #227 = FCMPLE32
  { 228,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #228 = FCMPNE16
  { 229,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #229 = FCMPNE32
  { 230,	2,	0,	4,	0,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo46, -1 ,nullptr },  // Inst #230 = FCMPQ
  { 231,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo47, -1 ,nullptr },  // Inst #231 = FCMPS
  { 232,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #232 = FDIVD
  { 233,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #233 = FDIVQ
  { 234,	3,	1,	4,	7,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #234 = FDIVS
  { 235,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #235 = FDMULQ
  { 236,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #236 = FDTOI
  { 237,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #237 = FDTOQ
  { 238,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #238 = FDTOS
  { 239,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #239 = FDTOX
  { 240,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #240 = FEXPAND
  { 241,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #241 = FHADDD
  { 242,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #242 = FHADDS
  { 243,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #243 = FHSUBD
  { 244,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #244 = FHSUBS
  { 245,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #245 = FITOD
  { 246,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #246 = FITOQ
  { 247,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #247 = FITOS
  { 248,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #248 = FLCMPD
  { 249,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #249 = FLCMPS
  { 250,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #250 = FLUSH
  { 251,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #251 = FLUSHW
  { 252,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #252 = FLUSHri
  { 253,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #253 = FLUSHrr
  { 254,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #254 = FMEAN16
  { 255,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #255 = FMOVD
  { 256,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #256 = FMOVD_FCC
  { 257,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #257 = FMOVD_ICC
  { 258,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #258 = FMOVD_XCC
  { 259,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #259 = FMOVQ
  { 260,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #260 = FMOVQ_FCC
  { 261,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #261 = FMOVQ_ICC
  { 262,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #262 = FMOVQ_XCC
  { 263,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #263 = FMOVRGEZD
  { 264,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #264 = FMOVRGEZQ
  { 265,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #265 = FMOVRGEZS
  { 266,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #266 = FMOVRGZD
  { 267,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #267 = FMOVRGZQ
  { 268,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #268 = FMOVRGZS
  { 269,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #269 = FMOVRLEZD
  { 270,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #270 = FMOVRLEZQ
  { 271,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #271 = FMOVRLEZS
  { 272,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #272 = FMOVRLZD
  { 273,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #273 = FMOVRLZQ
  { 274,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #274 = FMOVRLZS
  { 275,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #275 = FMOVRNZD
  { 276,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #276 = FMOVRNZQ
  { 277,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #277 = FMOVRNZS
  { 278,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #278 = FMOVRZD
  { 279,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #279 = FMOVRZQ
  { 280,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #280 = FMOVRZS
  { 281,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #281 = FMOVS
  { 282,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #282 = FMOVS_FCC
  { 283,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #283 = FMOVS_ICC
  { 284,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #284 = FMOVS_XCC
  { 285,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #285 = FMUL8SUX16
  { 286,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #286 = FMUL8ULX16
  { 287,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #287 = FMUL8X16
  { 288,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #288 = FMUL8X16AL
  { 289,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #289 = FMUL8X16AU
  { 290,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #290 = FMULD
  { 291,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #291 = FMULD8SUX16
  { 292,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #292 = FMULD8ULX16
  { 293,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #293 = FMULQ
  { 294,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #294 = FMULS
  { 295,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #295 = FNADDD
  { 296,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #296 = FNADDS
  { 297,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #297 = FNAND
  { 298,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #298 = FNANDS
  { 299,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #299 = FNEGD
  { 300,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #300 = FNEGQ
  { 301,	2,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #301 = FNEGS
  { 302,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #302 = FNHADDD
  { 303,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #303 = FNHADDS
  { 304,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #304 = FNMULD
  { 305,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #305 = FNMULS
  { 306,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #306 = FNOR
  { 307,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #307 = FNORS
  { 308,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #308 = FNOT1
  { 309,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #309 = FNOT1S
  { 310,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #310 = FNOT2
  { 311,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #311 = FNOT2S
  { 312,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #312 = FNSMULD
  { 313,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #313 = FONE
  { 314,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #314 = FONES
  { 315,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #315 = FOR
  { 316,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #316 = FORNOT1
  { 317,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #317 = FORNOT1S
  { 318,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #318 = FORNOT2
  { 319,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #319 = FORNOT2S
  { 320,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #320 = FORS
  { 321,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #321 = FPACK16
  { 322,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #322 = FPACK32
  { 323,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #323 = FPACKFIX
  { 324,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #324 = FPADD16
  { 325,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #325 = FPADD16S
  { 326,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #326 = FPADD32
  { 327,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #327 = FPADD32S
  { 328,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #328 = FPADD64
  { 329,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #329 = FPMERGE
  { 330,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #330 = FPSUB16
  { 331,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #331 = FPSUB16S
  { 332,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #332 = FPSUB32
  { 333,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #333 = FPSUB32S
  { 334,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #334 = FQTOD
  { 335,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #335 = FQTOI
  { 336,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #336 = FQTOS
  { 337,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #337 = FQTOX
  { 338,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #338 = FSLAS16
  { 339,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #339 = FSLAS32
  { 340,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #340 = FSLL16
  { 341,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #341 = FSLL32
  { 342,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #342 = FSMULD
  { 343,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #343 = FSQRTD
  { 344,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #344 = FSQRTQ
  { 345,	2,	1,	4,	12,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #345 = FSQRTS
  { 346,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #346 = FSRA16
  { 347,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #347 = FSRA32
  { 348,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #348 = FSRC1
  { 349,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #349 = FSRC1S
  { 350,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #350 = FSRC2
  { 351,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #351 = FSRC2S
  { 352,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #352 = FSRL16
  { 353,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #353 = FSRL32
  { 354,	2,	1,	4,	13,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #354 = FSTOD
  { 355,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #355 = FSTOI
  { 356,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #356 = FSTOQ
  { 357,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #357 = FSTOX
  { 358,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #358 = FSUBD
  { 359,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #359 = FSUBQ
  { 360,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #360 = FSUBS
  { 361,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #361 = FXNOR
  { 362,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #362 = FXNORS
  { 363,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #363 = FXOR
  { 364,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #364 = FXORS
  { 365,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #365 = FXTOD
  { 366,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #366 = FXTOQ
  { 367,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #367 = FXTOS
  { 368,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #368 = FZERO
  { 369,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #369 = FZEROS
  { 370,	1,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList5, OperandInfo2, -1 ,nullptr },  // Inst #370 = GETPCX
  { 371,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #371 = JMPLri
  { 372,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #372 = JMPLrr
  { 373,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #373 = LDArr
  { 374,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo32, -1 ,nullptr },  // Inst #374 = LDCSRri
  { 375,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo33, -1 ,nullptr },  // Inst #375 = LDCSRrr
  { 376,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #376 = LDCri
  { 377,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #377 = LDCrr
  { 378,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #378 = LDDArr
  { 379,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #379 = LDDCri
  { 380,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #380 = LDDCrr
  { 381,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #381 = LDDFArr
  { 382,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #382 = LDDFri
  { 383,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #383 = LDDFrr
  { 384,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #384 = LDDri
  { 385,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #385 = LDDrr
  { 386,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #386 = LDFArr
  { 387,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #387 = LDFSRri
  { 388,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo33, -1 ,nullptr },  // Inst #388 = LDFSRrr
  { 389,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #389 = LDFri
  { 390,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #390 = LDFrr
  { 391,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #391 = LDQFArr
  { 392,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #392 = LDQFri
  { 393,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #393 = LDQFrr
  { 394,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #394 = LDSBArr
  { 395,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #395 = LDSBri
  { 396,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #396 = LDSBrr
  { 397,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #397 = LDSHArr
  { 398,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #398 = LDSHri
  { 399,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #399 = LDSHrr
  { 400,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #400 = LDSTUBArr
  { 401,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #401 = LDSTUBri
  { 402,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #402 = LDSTUBrr
  { 403,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #403 = LDSWri
  { 404,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #404 = LDSWrr
  { 405,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #405 = LDUBArr
  { 406,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #406 = LDUBri
  { 407,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #407 = LDUBrr
  { 408,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #408 = LDUHArr
  { 409,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #409 = LDUHri
  { 410,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #410 = LDUHrr
  { 411,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #411 = LDXFSRri
  { 412,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo33, -1 ,nullptr },  // Inst #412 = LDXFSRrr
  { 413,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #413 = LDXri
  { 414,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #414 = LDXrr
  { 415,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #415 = LDri
  { 416,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #416 = LDrr
  { 417,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #417 = LEAX_ADDri
  { 418,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #418 = LEA_ADDri
  { 419,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #419 = LZCNT
  { 420,	1,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #420 = MEMBARi
  { 421,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #421 = MOVDTOX
  { 422,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #422 = MOVFCCri
  { 423,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #423 = MOVFCCrr
  { 424,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #424 = MOVICCri
  { 425,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #425 = MOVICCrr
  { 426,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #426 = MOVRGEZri
  { 427,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #427 = MOVRGEZrr
  { 428,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #428 = MOVRGZri
  { 429,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #429 = MOVRGZrr
  { 430,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #430 = MOVRLEZri
  { 431,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #431 = MOVRLEZrr
  { 432,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #432 = MOVRLZri
  { 433,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #433 = MOVRLZrr
  { 434,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #434 = MOVRNZri
  { 435,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #435 = MOVRNZrr
  { 436,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #436 = MOVRRZri
  { 437,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #437 = MOVRRZrr
  { 438,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #438 = MOVSTOSW
  { 439,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #439 = MOVSTOUW
  { 440,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #440 = MOVWTOS
  { 441,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #441 = MOVXCCri
  { 442,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #442 = MOVXCCrr
  { 443,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #443 = MOVXTOD
  { 444,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #444 = MULSCCri
  { 445,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo29, -1 ,nullptr },  // Inst #445 = MULSCCrr
  { 446,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #446 = MULXri
  { 447,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #447 = MULXrr
  { 448,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #448 = NOP
  { 449,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #449 = ORCCri
  { 450,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #450 = ORCCrr
  { 451,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #451 = ORNCCri
  { 452,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #452 = ORNCCrr
  { 453,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #453 = ORNri
  { 454,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #454 = ORNrr
  { 455,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #455 = ORXNrr
  { 456,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #456 = ORXri
  { 457,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #457 = ORXrr
  { 458,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #458 = ORri
  { 459,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #459 = ORrr
  { 460,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #460 = PDIST
  { 461,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #461 = PDISTN
  { 462,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #462 = POPCrr
  { 463,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #463 = RDASR
  { 464,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #464 = RDPR
  { 465,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #465 = RDPSR
  { 466,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #466 = RDTBR
  { 467,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #467 = RDWIM
  { 468,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #468 = RESTOREri
  { 469,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #469 = RESTORErr
  { 470,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #470 = RET
  { 471,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #471 = RETL
  { 472,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #472 = RETTri
  { 473,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #473 = RETTrr
  { 474,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #474 = SAVEri
  { 475,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #475 = SAVErr
  { 476,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #476 = SDIVCCri
  { 477,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo29, -1 ,nullptr },  // Inst #477 = SDIVCCrr
  { 478,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #478 = SDIVXri
  { 479,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #479 = SDIVXrr
  { 480,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #480 = SDIVri
  { 481,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo29, -1 ,nullptr },  // Inst #481 = SDIVrr
  { 482,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #482 = SELECT_CC_DFP_FCC
  { 483,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #483 = SELECT_CC_DFP_ICC
  { 484,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #484 = SELECT_CC_FP_FCC
  { 485,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #485 = SELECT_CC_FP_ICC
  { 486,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #486 = SELECT_CC_Int_FCC
  { 487,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #487 = SELECT_CC_Int_ICC
  { 488,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #488 = SELECT_CC_QFP_FCC
  { 489,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #489 = SELECT_CC_QFP_ICC
  { 490,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #490 = SET
  { 491,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #491 = SETHIXi
  { 492,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #492 = SETHIi
  { 493,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #493 = SHUTDOWN
  { 494,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #494 = SIAM
  { 495,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #495 = SLLXri
  { 496,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #496 = SLLXrr
  { 497,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #497 = SLLri
  { 498,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #498 = SLLrr
  { 499,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo100, -1 ,nullptr },  // Inst #499 = SMACri
  { 500,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo101, -1 ,nullptr },  // Inst #500 = SMACrr
  { 501,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #501 = SMULCCri
  { 502,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo29, -1 ,nullptr },  // Inst #502 = SMULCCrr
  { 503,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #503 = SMULri
  { 504,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo29, -1 ,nullptr },  // Inst #504 = SMULrr
  { 505,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #505 = SRAXri
  { 506,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #506 = SRAXrr
  { 507,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #507 = SRAri
  { 508,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #508 = SRArr
  { 509,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #509 = SRLXri
  { 510,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #510 = SRLXrr
  { 511,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #511 = SRLri
  { 512,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #512 = SRLrr
  { 513,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #513 = STArr
  { 514,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #514 = STBAR
  { 515,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #515 = STBArr
  { 516,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #516 = STBri
  { 517,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #517 = STBrr
  { 518,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo32, -1 ,nullptr },  // Inst #518 = STCSRri
  { 519,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo33, -1 ,nullptr },  // Inst #519 = STCSRrr
  { 520,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #520 = STCri
  { 521,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #521 = STCrr
  { 522,	4,	0,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #522 = STDArr
  { 523,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo32, -1 ,nullptr },  // Inst #523 = STDCQri
  { 524,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo33, -1 ,nullptr },  // Inst #524 = STDCQrr
  { 525,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #525 = STDCri
  { 526,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #526 = STDCrr
  { 527,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #527 = STDFArr
  { 528,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo32, -1 ,nullptr },  // Inst #528 = STDFQri
  { 529,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo33, -1 ,nullptr },  // Inst #529 = STDFQrr
  { 530,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #530 = STDFri
  { 531,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #531 = STDFrr
  { 532,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #532 = STDri
  { 533,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #533 = STDrr
  { 534,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #534 = STFArr
  { 535,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #535 = STFSRri
  { 536,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo33, -1 ,nullptr },  // Inst #536 = STFSRrr
  { 537,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #537 = STFri
  { 538,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #538 = STFrr
  { 539,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #539 = STHArr
  { 540,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #540 = STHri
  { 541,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #541 = STHrr
  { 542,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #542 = STQFArr
  { 543,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #543 = STQFri
  { 544,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #544 = STQFrr
  { 545,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo32, -1 ,nullptr },  // Inst #545 = STXFSRri
  { 546,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo33, -1 ,nullptr },  // Inst #546 = STXFSRrr
  { 547,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #547 = STXri
  { 548,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #548 = STXrr
  { 549,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #549 = STri
  { 550,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #550 = STrr
  { 551,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #551 = SUBCCri
  { 552,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #552 = SUBCCrr
  { 553,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #553 = SUBCri
  { 554,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #554 = SUBCrr
  { 555,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #555 = SUBEri
  { 556,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #556 = SUBErr
  { 557,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #557 = SUBXri
  { 558,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #558 = SUBXrr
  { 559,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #559 = SUBri
  { 560,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #560 = SUBrr
  { 561,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #561 = SWAPArr
  { 562,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #562 = SWAPri
  { 563,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #563 = SWAPrr
  { 564,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #564 = TA3
  { 565,	0,	0,	4,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #565 = TA5
  { 566,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #566 = TADDCCTVri
  { 567,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #567 = TADDCCTVrr
  { 568,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #568 = TADDCCri
  { 569,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #569 = TADDCCrr
  { 570,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #570 = TICCri
  { 571,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #571 = TICCrr
  { 572,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #572 = TLS_ADDXrr
  { 573,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #573 = TLS_ADDrr
  { 574,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #574 = TLS_CALL
  { 575,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #575 = TLS_LDXrr
  { 576,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #576 = TLS_LDrr
  { 577,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #577 = TRAPri
  { 578,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #578 = TRAPrr
  { 579,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #579 = TSUBCCTVri
  { 580,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #580 = TSUBCCTVrr
  { 581,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #581 = TSUBCCri
  { 582,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #582 = TSUBCCrr
  { 583,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #583 = TXCCri
  { 584,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #584 = TXCCrr
  { 585,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #585 = UDIVCCri
  { 586,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo29, -1 ,nullptr },  // Inst #586 = UDIVCCrr
  { 587,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #587 = UDIVXri
  { 588,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #588 = UDIVXrr
  { 589,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #589 = UDIVri
  { 590,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo29, -1 ,nullptr },  // Inst #590 = UDIVrr
  { 591,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo100, -1 ,nullptr },  // Inst #591 = UMACri
  { 592,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo101, -1 ,nullptr },  // Inst #592 = UMACrr
  { 593,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo28, -1 ,nullptr },  // Inst #593 = UMULCCri
  { 594,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo29, -1 ,nullptr },  // Inst #594 = UMULCCrr
  { 595,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #595 = UMULXHI
  { 596,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo28, -1 ,nullptr },  // Inst #596 = UMULri
  { 597,	3,	1,	4,	21,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo29, -1 ,nullptr },  // Inst #597 = UMULrr
  { 598,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #598 = UNIMP
  { 599,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #599 = V9FCMPD
  { 600,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #600 = V9FCMPED
  { 601,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #601 = V9FCMPEQ
  { 602,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #602 = V9FCMPES
  { 603,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #603 = V9FCMPQ
  { 604,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #604 = V9FCMPS
  { 605,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #605 = V9FMOVD_FCC
  { 606,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #606 = V9FMOVQ_FCC
  { 607,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #607 = V9FMOVS_FCC
  { 608,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #608 = V9MOVFCCri
  { 609,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #609 = V9MOVFCCrr
  { 610,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #610 = WRASRri
  { 611,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #611 = WRASRrr
  { 612,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #612 = WRPRri
  { 613,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #613 = WRPRrr
  { 614,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo41, -1 ,nullptr },  // Inst #614 = WRPSRri
  { 615,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo42, -1 ,nullptr },  // Inst #615 = WRPSRrr
  { 616,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo41, -1 ,nullptr },  // Inst #616 = WRTBRri
  { 617,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo42, -1 ,nullptr },  // Inst #617 = WRTBRrr
  { 618,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo41, -1 ,nullptr },  // Inst #618 = WRWIMri
  { 619,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo42, -1 ,nullptr },  // Inst #619 = WRWIMrr
  { 620,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #620 = XMULX
  { 621,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #621 = XMULXHI
  { 622,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #622 = XNORCCri
  { 623,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #623 = XNORCCrr
  { 624,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #624 = XNORXrr
  { 625,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #625 = XNORri
  { 626,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #626 = XNORrr
  { 627,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #627 = XORCCri
  { 628,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo29, -1 ,nullptr },  // Inst #628 = XORCCrr
  { 629,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #629 = XORXri
  { 630,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #630 = XORXrr
  { 631,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #631 = XORri
  { 632,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #632 = XORrr
};

extern const char SparcInstrNameData[] = {
  /* 0 */ 'C', 'A', 'S', 'A', 'a', 's', 'i', '1', '0', 0,
  /* 10 */ 'F', 'S', 'R', 'C', '1', 0,
  /* 16 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 0,
  /* 25 */ 'F', 'N', 'O', 'T', '1', 0,
  /* 31 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 0,
  /* 39 */ 'F', 'S', 'R', 'A', '3', '2', 0,
  /* 46 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 0,
  /* 54 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 0,
  /* 62 */ 'E', 'D', 'G', 'E', '3', '2', 0,
  /* 69 */ 'F', 'C', 'M', 'P', 'L', 'E', '3', '2', 0,
  /* 78 */ 'F', 'C', 'M', 'P', 'N', 'E', '3', '2', 0,
  /* 87 */ 'F', 'P', 'A', 'C', 'K', '3', '2', 0,
  /* 95 */ 'C', 'M', 'A', 'S', 'K', '3', '2', 0,
  /* 103 */ 'F', 'S', 'L', 'L', '3', '2', 0,
  /* 110 */ 'F', 'S', 'R', 'L', '3', '2', 0,
  /* 117 */ 'F', 'C', 'M', 'P', 'E', 'Q', '3', '2', 0,
  /* 126 */ 'F', 'S', 'L', 'A', 'S', '3', '2', 0,
  /* 134 */ 'F', 'C', 'M', 'P', 'G', 'T', '3', '2', 0,
  /* 143 */ 'A', 'R', 'R', 'A', 'Y', '3', '2', 0,
  /* 151 */ 'F', 'S', 'R', 'C', '2', 0,
  /* 157 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 165 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 173 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 0,
  /* 182 */ 'F', 'N', 'O', 'T', '2', 0,
  /* 188 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 0,
  /* 196 */ 'T', 'A', '3', 0,
  /* 200 */ 'F', 'P', 'A', 'D', 'D', '6', '4', 0,
  /* 208 */ 'T', 'A', '5', 0,
  /* 212 */ 'F', 'S', 'R', 'A', '1', '6', 0,
  /* 219 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 0,
  /* 227 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 0,
  /* 235 */ 'E', 'D', 'G', 'E', '1', '6', 0,
  /* 242 */ 'F', 'C', 'M', 'P', 'L', 'E', '1', '6', 0,
  /* 251 */ 'F', 'C', 'M', 'P', 'N', 'E', '1', '6', 0,
  /* 260 */ 'F', 'P', 'A', 'C', 'K', '1', '6', 0,
  /* 268 */ 'C', 'M', 'A', 'S', 'K', '1', '6', 0,
  /* 276 */ 'F', 'S', 'L', 'L', '1', '6', 0,
  /* 283 */ 'F', 'S', 'R', 'L', '1', '6', 0,
  /* 290 */ 'F', 'C', 'H', 'K', 'S', 'M', '1', '6', 0,
  /* 299 */ 'F', 'M', 'E', 'A', 'N', '1', '6', 0,
  /* 307 */ 'F', 'C', 'M', 'P', 'E', 'Q', '1', '6', 0,
  /* 316 */ 'F', 'S', 'L', 'A', 'S', '1', '6', 0,
  /* 324 */ 'F', 'C', 'M', 'P', 'G', 'T', '1', '6', 0,
  /* 333 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 0,
  /* 342 */ 'F', 'M', 'U', 'L', 'D', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 354 */ 'F', 'M', 'U', 'L', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 365 */ 'F', 'M', 'U', 'L', 'D', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 377 */ 'F', 'M', 'U', 'L', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 388 */ 'A', 'R', 'R', 'A', 'Y', '1', '6', 0,
  /* 396 */ 'E', 'D', 'G', 'E', '8', 0,
  /* 402 */ 'C', 'M', 'A', 'S', 'K', '8', 0,
  /* 409 */ 'A', 'R', 'R', 'A', 'Y', '8', 0,
  /* 416 */ 'B', 'A', 0,
  /* 419 */ 'B', 'P', 'F', 'C', 'C', 'A', 0,
  /* 426 */ 'B', 'P', 'I', 'C', 'C', 'A', 0,
  /* 433 */ 'B', 'P', 'X', 'C', 'C', 'A', 0,
  /* 440 */ 'C', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 448 */ 'F', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 456 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 462 */ 'F', 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'A', 'T', 'A', 0,
  /* 474 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 481 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 487 */ 'A', 'D', 'D', 'X', 'C', 'C', 'C', 0,
  /* 495 */ 'B', 'P', 'F', 'C', 'C', 0,
  /* 501 */ 'V', '9', 'F', 'M', 'O', 'V', 'D', '_', 'F', 'C', 'C', 0,
  /* 513 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 531 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 549 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 566 */ 'V', '9', 'F', 'M', 'O', 'V', 'Q', '_', 'F', 'C', 'C', 0,
  /* 578 */ 'V', '9', 'F', 'M', 'O', 'V', 'S', '_', 'F', 'C', 'C', 0,
  /* 590 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'F', 'C', 'C', 0,
  /* 608 */ 'B', 'P', 'I', 'C', 'C', 0,
  /* 614 */ 'F', 'M', 'O', 'V', 'D', '_', 'I', 'C', 'C', 0,
  /* 624 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 642 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 660 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 677 */ 'F', 'M', 'O', 'V', 'Q', '_', 'I', 'C', 'C', 0,
  /* 687 */ 'F', 'M', 'O', 'V', 'S', '_', 'I', 'C', 'C', 0,
  /* 697 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'I', 'C', 'C', 0,
  /* 715 */ 'B', 'P', 'X', 'C', 'C', 0,
  /* 721 */ 'F', 'M', 'O', 'V', 'D', '_', 'X', 'C', 'C', 0,
  /* 731 */ 'F', 'M', 'O', 'V', 'Q', '_', 'X', 'C', 'C', 0,
  /* 741 */ 'F', 'M', 'O', 'V', 'S', '_', 'X', 'C', 'C', 0,
  /* 751 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 763 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 773 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 781 */ 'A', 'D', 'D', 'X', 'C', 0,
  /* 787 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 794 */ 'F', 'S', 'U', 'B', 'D', 0,
  /* 800 */ 'F', 'H', 'S', 'U', 'B', 'D', 0,
  /* 807 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 814 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 820 */ 'F', 'A', 'D', 'D', 'D', 0,
  /* 826 */ 'F', 'H', 'A', 'D', 'D', 'D', 0,
  /* 833 */ 'F', 'N', 'H', 'A', 'D', 'D', 'D', 0,
  /* 841 */ 'F', 'N', 'A', 'D', 'D', 'D', 0,
  /* 848 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'D', 0,
  /* 857 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 863 */ 'F', 'M', 'U', 'L', 'D', 0,
  /* 869 */ 'F', 'N', 'M', 'U', 'L', 'D', 0,
  /* 876 */ 'F', 'S', 'M', 'U', 'L', 'D', 0,
  /* 883 */ 'F', 'N', 'S', 'M', 'U', 'L', 'D', 0,
  /* 891 */ 'F', 'A', 'N', 'D', 0,
  /* 896 */ 'F', 'N', 'A', 'N', 'D', 0,
  /* 902 */ 'F', 'E', 'X', 'P', 'A', 'N', 'D', 0,
  /* 910 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 916 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 929 */ 'C', 'B', 'C', 'O', 'N', 'D', 0,
  /* 936 */ 'F', 'B', 'C', 'O', 'N', 'D', 0,
  /* 943 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 952 */ 'F', 'I', 'T', 'O', 'D', 0,
  /* 958 */ 'F', 'Q', 'T', 'O', 'D', 0,
  /* 964 */ 'F', 'S', 'T', 'O', 'D', 0,
  /* 970 */ 'F', 'X', 'T', 'O', 'D', 0,
  /* 976 */ 'M', 'O', 'V', 'X', 'T', 'O', 'D', 0,
  /* 984 */ 'V', '9', 'F', 'C', 'M', 'P', 'D', 0,
  /* 992 */ 'F', 'L', 'C', 'M', 'P', 'D', 0,
  /* 999 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 1016 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 1022 */ 'F', 'S', 'Q', 'R', 'T', 'D', 0,
  /* 1029 */ 'F', 'D', 'I', 'V', 'D', 0,
  /* 1035 */ 'F', 'M', 'O', 'V', 'D', 0,
  /* 1041 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'D', 0,
  /* 1051 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'D', 0,
  /* 1061 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'D', 0,
  /* 1070 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'D', 0,
  /* 1079 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'D', 0,
  /* 1088 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'D', 0,
  /* 1096 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 1104 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1117 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 1125 */ 'F', 'P', 'M', 'E', 'R', 'G', 'E', 0,
  /* 1133 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1140 */ 'B', 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 1149 */ 'F', 'O', 'N', 'E', 0,
  /* 1154 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 1167 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 1175 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1185 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1200 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1215 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 1222 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1237 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1251 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1265 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 1272 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 1280 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 1288 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 1296 */ 'F', 'L', 'U', 'S', 'H', 0,
  /* 1302 */ 'P', 'H', 'I', 0,
  /* 1306 */ 'U', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1314 */ 'X', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1322 */ 'F', 'D', 'T', 'O', 'I', 0,
  /* 1328 */ 'F', 'Q', 'T', 'O', 'I', 0,
  /* 1334 */ 'F', 'S', 'T', 'O', 'I', 0,
  /* 1340 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 1349 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 1358 */ 'B', 'M', 'A', 'S', 'K', 0,
  /* 1364 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 1375 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 0,
  /* 1383 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 0,
  /* 1391 */ 'E', 'D', 'G', 'E', '8', 'L', 0,
  /* 1398 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'L', 0,
  /* 1409 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1418 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1427 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 1433 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 1453 */ 'T', 'L', 'S', '_', 'C', 'A', 'L', 'L', 0,
  /* 1462 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 1483 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 1495 */ 'K', 'I', 'L', 'L', 0,
  /* 1500 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 'L', 0,
  /* 1511 */ 'R', 'E', 'T', 'L', 0,
  /* 1516 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 1523 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 1529 */ 'S', 'I', 'A', 'M', 0,
  /* 1534 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 1541 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 1548 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 1555 */ 'R', 'D', 'W', 'I', 'M', 0,
  /* 1561 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 1571 */ 'E', 'D', 'G', 'E', '3', '2', 'N', 0,
  /* 1579 */ 'E', 'D', 'G', 'E', '1', '6', 'N', 0,
  /* 1587 */ 'E', 'D', 'G', 'E', '8', 'N', 0,
  /* 1594 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 'N', 0,
  /* 1603 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 'N', 0,
  /* 1612 */ 'E', 'D', 'G', 'E', '8', 'L', 'N', 0,
  /* 1620 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 1636 */ 'P', 'D', 'I', 'S', 'T', 'N', 0,
  /* 1643 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 1660 */ 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', 0,
  /* 1669 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 1677 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 1685 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 1693 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 1701 */ 'F', 'Z', 'E', 'R', 'O', 0,
  /* 1707 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 1716 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 1722 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1731 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 1740 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 1747 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 1754 */ 'U', 'N', 'I', 'M', 'P', 0,
  /* 1760 */ 'N', 'O', 'P', 0,
  /* 1764 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 1777 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 1789 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 1804 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 1811 */ 'F', 'S', 'U', 'B', 'Q', 0,
  /* 1817 */ 'F', 'A', 'D', 'D', 'Q', 0,
  /* 1823 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 1832 */ 'F', 'N', 'E', 'G', 'Q', 0,
  /* 1838 */ 'F', 'D', 'M', 'U', 'L', 'Q', 0,
  /* 1845 */ 'F', 'M', 'U', 'L', 'Q', 0,
  /* 1851 */ 'F', 'D', 'T', 'O', 'Q', 0,
  /* 1857 */ 'F', 'I', 'T', 'O', 'Q', 0,
  /* 1863 */ 'F', 'S', 'T', 'O', 'Q', 0,
  /* 1869 */ 'F', 'X', 'T', 'O', 'Q', 0,
  /* 1875 */ 'V', '9', 'F', 'C', 'M', 'P', 'Q', 0,
  /* 1883 */ 'F', 'A', 'B', 'S', 'Q', 0,
  /* 1889 */ 'F', 'S', 'Q', 'R', 'T', 'Q', 0,
  /* 1896 */ 'F', 'D', 'I', 'V', 'Q', 0,
  /* 1902 */ 'F', 'M', 'O', 'V', 'Q', 0,
  /* 1908 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'Q', 0,
  /* 1918 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'Q', 0,
  /* 1928 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'Q', 0,
  /* 1937 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'Q', 0,
  /* 1946 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'Q', 0,
  /* 1955 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'Q', 0,
  /* 1963 */ 'S', 'T', 'B', 'A', 'R', 0,
  /* 1969 */ 'R', 'D', 'T', 'B', 'R', 0,
  /* 1975 */ 'G', '_', 'B', 'R', 0,
  /* 1980 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 0,
  /* 1990 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 2015 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 2022 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 2029 */ 'F', 'O', 'R', 0,
  /* 2033 */ 'F', 'N', 'O', 'R', 0,
  /* 2038 */ 'F', 'X', 'N', 'O', 'R', 0,
  /* 2044 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 2061 */ 'F', 'X', 'O', 'R', 0,
  /* 2066 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 2072 */ 'G', '_', 'O', 'R', 0,
  /* 2077 */ 'R', 'D', 'P', 'R', 0,
  /* 2082 */ 'R', 'D', 'A', 'S', 'R', 0,
  /* 2088 */ 'R', 'D', 'P', 'S', 'R', 0,
  /* 2094 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 2105 */ 'F', 'S', 'R', 'C', '1', 'S', 0,
  /* 2112 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 'S', 0,
  /* 2122 */ 'F', 'N', 'O', 'T', '1', 'S', 0,
  /* 2129 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 'S', 0,
  /* 2138 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 'S', 0,
  /* 2147 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 'S', 0,
  /* 2156 */ 'F', 'S', 'R', 'C', '2', 'S', 0,
  /* 2163 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 'S', 0,
  /* 2173 */ 'F', 'N', 'O', 'T', '2', 'S', 0,
  /* 2180 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 'S', 0,
  /* 2189 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 'S', 0,
  /* 2198 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 'S', 0,
  /* 2207 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 2213 */ 'F', 'H', 'S', 'U', 'B', 'S', 0,
  /* 2220 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 2226 */ 'F', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2233 */ 'F', 'N', 'H', 'A', 'D', 'D', 'S', 0,
  /* 2241 */ 'F', 'N', 'A', 'D', 'D', 'S', 0,
  /* 2248 */ 'F', 'A', 'N', 'D', 'S', 0,
  /* 2254 */ 'F', 'N', 'A', 'N', 'D', 'S', 0,
  /* 2261 */ 'F', 'O', 'N', 'E', 'S', 0,
  /* 2267 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'S', 0,
  /* 2276 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2293 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 2308 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 2314 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 2320 */ 'F', 'N', 'M', 'U', 'L', 'S', 0,
  /* 2327 */ 'F', 'Z', 'E', 'R', 'O', 'S', 0,
  /* 2334 */ 'F', 'D', 'T', 'O', 'S', 0,
  /* 2340 */ 'F', 'I', 'T', 'O', 'S', 0,
  /* 2346 */ 'F', 'Q', 'T', 'O', 'S', 0,
  /* 2352 */ 'M', 'O', 'V', 'W', 'T', 'O', 'S', 0,
  /* 2360 */ 'F', 'X', 'T', 'O', 'S', 0,
  /* 2366 */ 'V', '9', 'F', 'C', 'M', 'P', 'S', 0,
  /* 2374 */ 'F', 'L', 'C', 'M', 'P', 'S', 0,
  /* 2381 */ 'F', 'O', 'R', 'S', 0,
  /* 2386 */ 'F', 'N', 'O', 'R', 'S', 0,
  /* 2392 */ 'F', 'X', 'N', 'O', 'R', 'S', 0,
  /* 2399 */ 'F', 'X', 'O', 'R', 'S', 0,
  /* 2405 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 2422 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 2428 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 2455 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 2462 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 2468 */ 'F', 'M', 'O', 'V', 'S', 0,
  /* 2474 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'S', 0,
  /* 2484 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'S', 0,
  /* 2494 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'S', 0,
  /* 2503 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'S', 0,
  /* 2512 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'S', 0,
  /* 2521 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'S', 0,
  /* 2529 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 2539 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 2548 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 2561 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 2575 */ 'S', 'E', 'T', 0,
  /* 2579 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 2603 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2624 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 2644 */ 'B', 'P', 'F', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2653 */ 'B', 'P', 'I', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2662 */ 'B', 'P', 'X', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2671 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2683 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 2694 */ 'B', 'P', 'F', 'C', 'C', 'N', 'T', 0,
  /* 2702 */ 'B', 'P', 'I', 'C', 'C', 'N', 'T', 0,
  /* 2710 */ 'B', 'P', 'X', 'C', 'C', 'N', 'T', 0,
  /* 2718 */ 'L', 'Z', 'C', 'N', 'T', 0,
  /* 2724 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2735 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2746 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 2757 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2767 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2782 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 2791 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 2801 */ 'P', 'D', 'I', 'S', 'T', 0,
  /* 2807 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 2815 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 2822 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 2831 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 2838 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'U', 0,
  /* 2849 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 2856 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 2863 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 2870 */ 'F', 'L', 'U', 'S', 'H', 'W', 0,
  /* 2877 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 2884 */ 'M', 'O', 'V', 'S', 'T', 'O', 'S', 'W', 0,
  /* 2893 */ 'M', 'O', 'V', 'S', 'T', 'O', 'U', 'W', 0,
  /* 2902 */ 'G', 'E', 'T', 'P', 'C', 'X', 0,
  /* 2909 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 2923 */ 'F', 'P', 'A', 'C', 'K', 'F', 'I', 'X', 0,
  /* 2932 */ 'X', 'M', 'U', 'L', 'X', 0,
  /* 2938 */ 'F', 'D', 'T', 'O', 'X', 0,
  /* 2944 */ 'M', 'O', 'V', 'D', 'T', 'O', 'X', 0,
  /* 2952 */ 'F', 'Q', 'T', 'O', 'X', 0,
  /* 2958 */ 'F', 'S', 'T', 'O', 'X', 0,
  /* 2964 */ 'C', 'O', 'P', 'Y', 0,
  /* 2969 */ 'S', 'E', 'T', 'H', 'I', 'i', 0,
  /* 2976 */ 'M', 'E', 'M', 'B', 'A', 'R', 'i', 0,
  /* 2984 */ 'S', 'E', 'T', 'H', 'I', 'X', 'i', 0,
  /* 2992 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 3012 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 3031 */ 'S', 'R', 'A', 'r', 'i', 0,
  /* 3037 */ 'L', 'D', 'S', 'B', 'r', 'i', 0,
  /* 3044 */ 'S', 'T', 'B', 'r', 'i', 0,
  /* 3050 */ 'L', 'D', 'U', 'B', 'r', 'i', 0,
  /* 3057 */ 'S', 'U', 'B', 'r', 'i', 0,
  /* 3063 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'i', 0,
  /* 3072 */ 'S', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3079 */ 'U', 'M', 'A', 'C', 'r', 'i', 0,
  /* 3086 */ 'S', 'U', 'B', 'C', 'r', 'i', 0,
  /* 3093 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'i', 0,
  /* 3102 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3111 */ 'A', 'N', 'D', 'C', 'C', 'r', 'i', 0,
  /* 3119 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'i', 0,
  /* 3130 */ 'T', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3137 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'i', 0,
  /* 3146 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3155 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 3164 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3173 */ 'O', 'R', 'N', 'C', 'C', 'r', 'i', 0,
  /* 3181 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3190 */ 'X', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 3198 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'i', 0,
  /* 3207 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3216 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 3225 */ 'T', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3232 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'i', 0,
  /* 3241 */ 'A', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3248 */ 'L', 'D', 'D', 'C', 'r', 'i', 0,
  /* 3255 */ 'L', 'D', 'C', 'r', 'i', 0,
  /* 3261 */ 'S', 'T', 'D', 'C', 'r', 'i', 0,
  /* 3268 */ 'S', 'T', 'C', 'r', 'i', 0,
  /* 3274 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3284 */ 'L', 'E', 'A', 'X', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 3295 */ 'L', 'D', 'D', 'r', 'i', 0,
  /* 3301 */ 'L', 'D', 'r', 'i', 0,
  /* 3306 */ 'A', 'N', 'D', 'r', 'i', 0,
  /* 3312 */ 'B', 'I', 'N', 'D', 'r', 'i', 0,
  /* 3319 */ 'S', 'T', 'D', 'r', 'i', 0,
  /* 3325 */ 'S', 'U', 'B', 'E', 'r', 'i', 0,
  /* 3332 */ 'A', 'D', 'D', 'E', 'r', 'i', 0,
  /* 3339 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'i', 0,
  /* 3349 */ 'S', 'A', 'V', 'E', 'r', 'i', 0,
  /* 3356 */ 'L', 'D', 'D', 'F', 'r', 'i', 0,
  /* 3363 */ 'L', 'D', 'F', 'r', 'i', 0,
  /* 3369 */ 'S', 'T', 'D', 'F', 'r', 'i', 0,
  /* 3376 */ 'L', 'D', 'Q', 'F', 'r', 'i', 0,
  /* 3383 */ 'S', 'T', 'Q', 'F', 'r', 'i', 0,
  /* 3390 */ 'S', 'T', 'F', 'r', 'i', 0,
  /* 3396 */ 'L', 'D', 'S', 'H', 'r', 'i', 0,
  /* 3403 */ 'F', 'L', 'U', 'S', 'H', 'r', 'i', 0,
  /* 3411 */ 'S', 'T', 'H', 'r', 'i', 0,
  /* 3417 */ 'L', 'D', 'U', 'H', 'r', 'i', 0,
  /* 3424 */ 'C', 'A', 'L', 'L', 'r', 'i', 0,
  /* 3431 */ 'S', 'L', 'L', 'r', 'i', 0,
  /* 3437 */ 'J', 'M', 'P', 'L', 'r', 'i', 0,
  /* 3444 */ 'S', 'R', 'L', 'r', 'i', 0,
  /* 3450 */ 'S', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3457 */ 'U', 'M', 'U', 'L', 'r', 'i', 0,
  /* 3464 */ 'W', 'R', 'W', 'I', 'M', 'r', 'i', 0,
  /* 3472 */ 'A', 'N', 'D', 'N', 'r', 'i', 0,
  /* 3479 */ 'O', 'R', 'N', 'r', 'i', 0,
  /* 3485 */ 'T', 'R', 'A', 'P', 'r', 'i', 0,
  /* 3492 */ 'S', 'W', 'A', 'P', 'r', 'i', 0,
  /* 3499 */ 'C', 'M', 'P', 'r', 'i', 0,
  /* 3505 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'i', 0,
  /* 3513 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'i', 0,
  /* 3521 */ 'W', 'R', 'T', 'B', 'R', 'r', 'i', 0,
  /* 3529 */ 'X', 'N', 'O', 'R', 'r', 'i', 0,
  /* 3536 */ 'X', 'O', 'R', 'r', 'i', 0,
  /* 3542 */ 'W', 'R', 'P', 'R', 'r', 'i', 0,
  /* 3549 */ 'W', 'R', 'A', 'S', 'R', 'r', 'i', 0,
  /* 3557 */ 'L', 'D', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3565 */ 'S', 'T', 'C', 'S', 'R', 'r', 'i', 0,
  /* 3573 */ 'L', 'D', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3581 */ 'S', 'T', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3589 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3598 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 3607 */ 'W', 'R', 'P', 'S', 'R', 'r', 'i', 0,
  /* 3615 */ 'S', 'T', 'r', 'i', 0,
  /* 3620 */ 'R', 'E', 'T', 'T', 'r', 'i', 0,
  /* 3627 */ 'S', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3634 */ 'U', 'D', 'I', 'V', 'r', 'i', 0,
  /* 3641 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3652 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 3663 */ 'L', 'D', 'S', 'W', 'r', 'i', 0,
  /* 3670 */ 'S', 'R', 'A', 'X', 'r', 'i', 0,
  /* 3677 */ 'S', 'U', 'B', 'X', 'r', 'i', 0,
  /* 3684 */ 'A', 'D', 'D', 'X', 'r', 'i', 0,
  /* 3691 */ 'L', 'D', 'X', 'r', 'i', 0,
  /* 3697 */ 'A', 'N', 'D', 'X', 'r', 'i', 0,
  /* 3704 */ 'S', 'L', 'L', 'X', 'r', 'i', 0,
  /* 3711 */ 'S', 'R', 'L', 'X', 'r', 'i', 0,
  /* 3718 */ 'M', 'U', 'L', 'X', 'r', 'i', 0,
  /* 3725 */ 'X', 'O', 'R', 'X', 'r', 'i', 0,
  /* 3732 */ 'S', 'T', 'X', 'r', 'i', 0,
  /* 3738 */ 'S', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3746 */ 'U', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3754 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'i', 0,
  /* 3764 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'i', 0,
  /* 3774 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'i', 0,
  /* 3783 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'i', 0,
  /* 3792 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'i', 0,
  /* 3801 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'i', 0,
  /* 3810 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3819 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3828 */ 'B', 'P', 'G', 'Z', 'a', 'p', 'n', 0,
  /* 3836 */ 'B', 'P', 'L', 'Z', 'a', 'p', 'n', 0,
  /* 3844 */ 'B', 'P', 'N', 'Z', 'a', 'p', 'n', 0,
  /* 3852 */ 'B', 'P', 'Z', 'a', 'p', 'n', 0,
  /* 3859 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3869 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3879 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3888 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3897 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3906 */ 'B', 'P', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3914 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3934 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3953 */ 'L', 'D', 'S', 'B', 'A', 'r', 'r', 0,
  /* 3961 */ 'S', 'T', 'B', 'A', 'r', 'r', 0,
  /* 3968 */ 'L', 'D', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3976 */ 'L', 'D', 'S', 'T', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3986 */ 'L', 'D', 'D', 'A', 'r', 'r', 0,
  /* 3993 */ 'L', 'D', 'A', 'r', 'r', 0,
  /* 3999 */ 'S', 'T', 'D', 'A', 'r', 'r', 0,
  /* 4006 */ 'L', 'D', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4014 */ 'L', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4021 */ 'S', 'T', 'D', 'F', 'A', 'r', 'r', 0,
  /* 4029 */ 'L', 'D', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 4037 */ 'S', 'T', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 4045 */ 'S', 'T', 'F', 'A', 'r', 'r', 0,
  /* 4052 */ 'L', 'D', 'S', 'H', 'A', 'r', 'r', 0,
  /* 4060 */ 'S', 'T', 'H', 'A', 'r', 'r', 0,
  /* 4067 */ 'L', 'D', 'U', 'H', 'A', 'r', 'r', 0,
  /* 4075 */ 'S', 'W', 'A', 'P', 'A', 'r', 'r', 0,
  /* 4083 */ 'S', 'R', 'A', 'r', 'r', 0,
  /* 4089 */ 'C', 'A', 'S', 'A', 'r', 'r', 0,
  /* 4096 */ 'S', 'T', 'A', 'r', 'r', 0,
  /* 4102 */ 'L', 'D', 'S', 'B', 'r', 'r', 0,
  /* 4109 */ 'S', 'T', 'B', 'r', 'r', 0,
  /* 4115 */ 'L', 'D', 'U', 'B', 'r', 'r', 0,
  /* 4122 */ 'S', 'U', 'B', 'r', 'r', 0,
  /* 4128 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'r', 0,
  /* 4137 */ 'S', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4144 */ 'U', 'M', 'A', 'C', 'r', 'r', 0,
  /* 4151 */ 'S', 'U', 'B', 'C', 'r', 'r', 0,
  /* 4158 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'r', 0,
  /* 4167 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4176 */ 'A', 'N', 'D', 'C', 'C', 'r', 'r', 0,
  /* 4184 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'r', 0,
  /* 4195 */ 'T', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4202 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'r', 0,
  /* 4211 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4220 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 4229 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4238 */ 'O', 'R', 'N', 'C', 'C', 'r', 'r', 0,
  /* 4246 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4255 */ 'X', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 4263 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'r', 0,
  /* 4272 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4281 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 4290 */ 'T', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4297 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'r', 0,
  /* 4306 */ 'A', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4313 */ 'L', 'D', 'D', 'C', 'r', 'r', 0,
  /* 4320 */ 'L', 'D', 'C', 'r', 'r', 0,
  /* 4326 */ 'S', 'T', 'D', 'C', 'r', 'r', 0,
  /* 4333 */ 'P', 'O', 'P', 'C', 'r', 'r', 0,
  /* 4340 */ 'S', 'T', 'C', 'r', 'r', 0,
  /* 4346 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'r', 'r', 0,
  /* 4356 */ 'L', 'D', 'D', 'r', 'r', 0,
  /* 4362 */ 'T', 'L', 'S', '_', 'L', 'D', 'r', 'r', 0,
  /* 4371 */ 'A', 'N', 'D', 'r', 'r', 0,
  /* 4377 */ 'B', 'I', 'N', 'D', 'r', 'r', 0,
  /* 4384 */ 'S', 'T', 'D', 'r', 'r', 0,
  /* 4390 */ 'S', 'U', 'B', 'E', 'r', 'r', 0,
  /* 4397 */ 'A', 'D', 'D', 'E', 'r', 'r', 0,
  /* 4404 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'r', 0,
  /* 4414 */ 'S', 'A', 'V', 'E', 'r', 'r', 0,
  /* 4421 */ 'L', 'D', 'D', 'F', 'r', 'r', 0,
  /* 4428 */ 'L', 'D', 'F', 'r', 'r', 0,
  /* 4434 */ 'S', 'T', 'D', 'F', 'r', 'r', 0,
  /* 4441 */ 'L', 'D', 'Q', 'F', 'r', 'r', 0,
  /* 4448 */ 'S', 'T', 'Q', 'F', 'r', 'r', 0,
  /* 4455 */ 'S', 'T', 'F', 'r', 'r', 0,
  /* 4461 */ 'L', 'D', 'S', 'H', 'r', 'r', 0,
  /* 4468 */ 'F', 'L', 'U', 'S', 'H', 'r', 'r', 0,
  /* 4476 */ 'S', 'T', 'H', 'r', 'r', 0,
  /* 4482 */ 'L', 'D', 'U', 'H', 'r', 'r', 0,
  /* 4489 */ 'C', 'A', 'L', 'L', 'r', 'r', 0,
  /* 4496 */ 'S', 'L', 'L', 'r', 'r', 0,
  /* 4502 */ 'J', 'M', 'P', 'L', 'r', 'r', 0,
  /* 4509 */ 'S', 'R', 'L', 'r', 'r', 0,
  /* 4515 */ 'S', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4522 */ 'U', 'M', 'U', 'L', 'r', 'r', 0,
  /* 4529 */ 'W', 'R', 'W', 'I', 'M', 'r', 'r', 0,
  /* 4537 */ 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 4544 */ 'O', 'R', 'N', 'r', 'r', 0,
  /* 4550 */ 'A', 'N', 'D', 'X', 'N', 'r', 'r', 0,
  /* 4558 */ 'O', 'R', 'X', 'N', 'r', 'r', 0,
  /* 4565 */ 'T', 'R', 'A', 'P', 'r', 'r', 0,
  /* 4572 */ 'S', 'W', 'A', 'P', 'r', 'r', 0,
  /* 4579 */ 'C', 'M', 'P', 'r', 'r', 0,
  /* 4585 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'r', 0,
  /* 4593 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'r', 0,
  /* 4601 */ 'W', 'R', 'T', 'B', 'R', 'r', 'r', 0,
  /* 4609 */ 'X', 'N', 'O', 'R', 'r', 'r', 0,
  /* 4616 */ 'X', 'O', 'R', 'r', 'r', 0,
  /* 4622 */ 'W', 'R', 'P', 'R', 'r', 'r', 0,
  /* 4629 */ 'W', 'R', 'A', 'S', 'R', 'r', 'r', 0,
  /* 4637 */ 'L', 'D', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4645 */ 'S', 'T', 'C', 'S', 'R', 'r', 'r', 0,
  /* 4653 */ 'L', 'D', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4661 */ 'S', 'T', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4669 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4678 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 4687 */ 'W', 'R', 'P', 'S', 'R', 'r', 'r', 0,
  /* 4695 */ 'C', 'A', 'S', 'r', 'r', 0,
  /* 4701 */ 'S', 'T', 'r', 'r', 0,
  /* 4706 */ 'R', 'E', 'T', 'T', 'r', 'r', 0,
  /* 4713 */ 'S', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4720 */ 'U', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4727 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4738 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4749 */ 'L', 'D', 'S', 'W', 'r', 'r', 0,
  /* 4756 */ 'S', 'R', 'A', 'X', 'r', 'r', 0,
  /* 4763 */ 'S', 'U', 'B', 'X', 'r', 'r', 0,
  /* 4770 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'X', 'r', 'r', 0,
  /* 4781 */ 'T', 'L', 'S', '_', 'L', 'D', 'X', 'r', 'r', 0,
  /* 4791 */ 'A', 'N', 'D', 'X', 'r', 'r', 0,
  /* 4798 */ 'S', 'L', 'L', 'X', 'r', 'r', 0,
  /* 4805 */ 'S', 'R', 'L', 'X', 'r', 'r', 0,
  /* 4812 */ 'M', 'U', 'L', 'X', 'r', 'r', 0,
  /* 4819 */ 'X', 'N', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4827 */ 'X', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4834 */ 'C', 'A', 'S', 'X', 'r', 'r', 0,
  /* 4841 */ 'S', 'T', 'X', 'r', 'r', 0,
  /* 4847 */ 'S', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4855 */ 'U', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4863 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'r', 0,
  /* 4873 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'r', 0,
  /* 4883 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'r', 0,
  /* 4892 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'r', 0,
  /* 4901 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'r', 0,
  /* 4910 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'r', 0,
  /* 4919 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4928 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4937 */ 'B', 'P', 'G', 'Z', 'a', 'p', 't', 0,
  /* 4945 */ 'B', 'P', 'L', 'Z', 'a', 'p', 't', 0,
  /* 4953 */ 'B', 'P', 'N', 'Z', 'a', 'p', 't', 0,
  /* 4961 */ 'B', 'P', 'Z', 'a', 'p', 't', 0,
  /* 4968 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4978 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4988 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4997 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5006 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 't', 0,
  /* 5015 */ 'B', 'P', 'Z', 'n', 'a', 'p', 't', 0,
};

extern const unsigned SparcInstrNameIndices[] = {
    1302U, 1561U, 1620U, 1418U, 1409U, 1495U, 1222U, 1237U, 
    1202U, 1251U, 2405U, 1175U, 1104U, 2964U, 1133U, 2767U, 
    916U, 1707U, 1483U, 2735U, 999U, 2724U, 1154U, 1777U, 
    1764U, 1990U, 2561U, 2579U, 1433U, 1462U, 814U, 481U, 
    1523U, 2856U, 2863U, 1541U, 1548U, 910U, 2072U, 2066U, 
    1200U, 2909U, 1185U, 2529U, 2276U, 2782U, 2293U, 2746U, 
    2094U, 2791U, 787U, 1167U, 943U, 2548U, 751U, 2428U, 
    2822U, 773U, 2683U, 2671U, 2757U, 1272U, 2815U, 2831U, 
    1427U, 2022U, 2015U, 1747U, 1740U, 2539U, 1117U, 1096U, 
    1677U, 1669U, 1693U, 1685U, 1288U, 1280U, 807U, 474U, 
    1516U, 456U, 2849U, 1534U, 2877U, 1804U, 165U, 1265U, 
    157U, 1215U, 2807U, 763U, 1340U, 1349U, 1722U, 1731U, 
    1716U, 1364U, 1975U, 2624U, 2603U, 2044U, 3103U, 4168U, 
    3241U, 4306U, 3332U, 4397U, 781U, 487U, 3684U, 4774U, 
    3278U, 4350U, 1643U, 1789U, 1980U, 1500U, 3111U, 4176U, 
    3164U, 4229U, 3472U, 4537U, 4550U, 3697U, 4791U, 3306U, 
    4371U, 388U, 143U, 409U, 416U, 930U, 441U, 3312U, 
    4377U, 1358U, 495U, 419U, 2644U, 2694U, 3810U, 4919U, 
    3859U, 4968U, 3828U, 4937U, 3879U, 4988U, 608U, 426U, 
    2653U, 2702U, 3819U, 4928U, 3869U, 4978U, 3836U, 4945U, 
    3888U, 4997U, 3844U, 4953U, 3897U, 5006U, 715U, 433U, 
    2662U, 2710U, 3852U, 4961U, 3906U, 5015U, 1140U, 1448U, 
    3424U, 4489U, 0U, 4089U, 4834U, 4695U, 929U, 440U, 
    268U, 95U, 402U, 3499U, 4579U, 235U, 1383U, 1603U, 
    1579U, 62U, 1375U, 1594U, 1571U, 396U, 1391U, 1612U, 
    1587U, 2992U, 3914U, 3012U, 3934U, 1016U, 1883U, 2422U, 
    820U, 1817U, 2220U, 462U, 891U, 16U, 2112U, 173U, 
    2163U, 2248U, 936U, 448U, 290U, 986U, 307U, 117U, 
    324U, 134U, 242U, 69U, 251U, 78U, 1877U, 2368U, 
    1029U, 1896U, 2462U, 1838U, 1322U, 1851U, 2334U, 2938U, 
    902U, 826U, 2226U, 800U, 2213U, 952U, 1857U, 2340U, 
    992U, 2374U, 1296U, 2870U, 3403U, 4468U, 299U, 1035U, 
    503U, 614U, 721U, 1902U, 568U, 677U, 731U, 1041U, 
    1908U, 2474U, 1061U, 1928U, 2494U, 1051U, 1918U, 2484U, 
    1070U, 1937U, 2503U, 1079U, 1946U, 2512U, 1088U, 1955U, 
    2521U, 2468U, 580U, 687U, 741U, 377U, 354U, 333U, 
    1398U, 2838U, 863U, 365U, 342U, 1845U, 2314U, 841U, 
    2241U, 896U, 2254U, 857U, 1832U, 2308U, 833U, 2233U, 
    869U, 2320U, 2033U, 2386U, 25U, 2122U, 182U, 2173U, 
    883U, 1149U, 2261U, 2029U, 31U, 2129U, 188U, 2180U, 
    2381U, 260U, 87U, 2923U, 227U, 2198U, 54U, 2147U, 
    200U, 1125U, 219U, 2189U, 46U, 2138U, 958U, 1328U, 
    2346U, 2952U, 316U, 126U, 276U, 103U, 876U, 1022U, 
    1889U, 2455U, 212U, 39U, 10U, 2105U, 151U, 2156U, 
    283U, 110U, 964U, 1334U, 1863U, 2958U, 794U, 1811U, 
    2207U, 2038U, 2392U, 2061U, 2399U, 970U, 1869U, 2360U, 
    1701U, 2327U, 2902U, 3437U, 4502U, 3993U, 3557U, 4637U, 
    3255U, 4320U, 3986U, 3248U, 4313U, 4006U, 3356U, 4421U, 
    3295U, 4356U, 4014U, 3573U, 4653U, 3363U, 4428U, 4029U, 
    3376U, 4441U, 3953U, 3037U, 4102U, 4052U, 3396U, 4461U, 
    3976U, 3063U, 4128U, 3663U, 4749U, 3968U, 3050U, 4115U, 
    4067U, 3417U, 4482U, 3589U, 4669U, 3691U, 4785U, 3301U, 
    4366U, 3284U, 3274U, 2718U, 2976U, 2944U, 3121U, 4186U, 
    3137U, 4202U, 3754U, 4863U, 3774U, 4883U, 3764U, 4873U, 
    3783U, 4892U, 3792U, 4901U, 3801U, 4910U, 2884U, 2893U, 
    2352U, 3232U, 4297U, 976U, 3198U, 4263U, 3718U, 4812U, 
    1760U, 3183U, 4248U, 3173U, 4238U, 3479U, 4544U, 4558U, 
    3726U, 4821U, 3531U, 4611U, 2801U, 1636U, 4333U, 2082U, 
    2077U, 2088U, 1969U, 1555U, 3339U, 4404U, 2571U, 1511U, 
    3620U, 4706U, 3349U, 4414U, 3207U, 4272U, 3738U, 4847U, 
    3627U, 4713U, 513U, 624U, 549U, 660U, 590U, 697U, 
    531U, 642U, 2575U, 2984U, 2969U, 1660U, 1529U, 3704U, 
    4798U, 3431U, 4496U, 3072U, 4137U, 3146U, 4211U, 3450U, 
    4515U, 3670U, 4756U, 3031U, 4083U, 3711U, 4805U, 3444U, 
    4509U, 4096U, 1963U, 3961U, 3044U, 4109U, 3565U, 4645U, 
    3268U, 4340U, 3999U, 3505U, 4585U, 3261U, 4326U, 4021U, 
    3513U, 4593U, 3369U, 4434U, 3319U, 4384U, 4045U, 3581U, 
    4661U, 3390U, 4455U, 4060U, 3411U, 4476U, 4037U, 3383U, 
    4448U, 3598U, 4678U, 3732U, 4841U, 3615U, 4701U, 3094U, 
    4159U, 3086U, 4151U, 3325U, 4390U, 3677U, 4763U, 3057U, 
    4122U, 4075U, 3492U, 4572U, 196U, 208U, 3652U, 4738U, 
    3102U, 4167U, 3130U, 4195U, 4770U, 4346U, 1453U, 4781U, 
    4362U, 3485U, 4565U, 3641U, 4727U, 3093U, 4158U, 3225U, 
    4290U, 3216U, 4281U, 3746U, 4855U, 3634U, 4720U, 3079U, 
    4144U, 3155U, 4220U, 1306U, 3457U, 4522U, 1754U, 984U, 
    848U, 1823U, 2267U, 1875U, 2366U, 501U, 566U, 578U, 
    3119U, 4184U, 3549U, 4629U, 3542U, 4622U, 3607U, 4687U, 
    3521U, 4601U, 3464U, 4529U, 2932U, 1314U, 3181U, 4246U, 
    4819U, 3529U, 4609U, 3190U, 4255U, 3725U, 4827U, 3536U, 
    4616U, 
};

static inline void InitSparcMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 633);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SparcGenInstrInfo : public TargetInstrInfo {
  explicit SparcGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~SparcGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SparcInsts[];
extern const unsigned SparcInstrNameIndices[];
extern const char SparcInstrNameData[];
SparcGenInstrInfo::SparcGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 633);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace SP {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace SP {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace SP {
namespace OpTypes {
enum OperandType {
  CCOp = 0,
  MEMri = 1,
  MEMrr = 2,
  TLSSym = 3,
  bprtarget = 4,
  bprtarget16 = 5,
  brtarget = 6,
  calltarget = 7,
  f32imm = 8,
  f64imm = 9,
  getPCX = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  simm13Op = 16,
  type0 = 17,
  type1 = 18,
  type2 = 19,
  type3 = 20,
  type4 = 21,
  type5 = 22,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace SP
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

